#include <HardwareSerial.h>
#include <PMserial.h>  // Arduino library for PM sensors with serial interface

#include <TinyGPS++.h> // Need TinyGPSPlus library





// GPS variables
static const int RXPin = 13, TXPin = 12;
static const uint32_t GPSBaud = 9600;

// The TinyGPS++ object
TinyGPSPlus gps;
// The serial connection to the GPS device
HardwareSerial ss(1);


SerialPM pms(PMSA003); // aka G10


// Serial1 and Serial2 are not instantiated by default, so do it here
#include <HardwareSerial.h>
HardwareSerial Serialfu(2); // UART2 on GPIO16(RX),GPIO17(TX)




void setup() {
 
  Serial.begin(9600);

  Serial.println(F("Booted"));
  

  ss.begin(GPSBaud, SERIAL_8N1, RXPin, TXPin); // UART 1 maps to unused pins
   Serial.println(F("GPS STARTED"));
  pms.begin(Serialfu);
  pms.init();
  Serial.println(F("PMS sensor on HardwareSerial"));
 

}



void loop() {
  // read the PM sensor
  pms.read();
  Serial.println(F("enTERED LOOP"));
  Serial.printf("PM1 %d, PM2.5 %d, PM10 %d [ug/m3]\n", pms.pm[0], pms.pm[1], pms.pm[2]);
 
  // This sketch displays information every time a new sentence from GPS is correctly encoded.
  while (ss.available() > 0) {
    gps.encode(ss.read());
    if (gps.location.isUpdated()) {
      Serial.print("Latitude= "); Serial.print(gps.location.lat(), 6);
      Serial.print(" Longitude= "); Serial.println(gps.location.lng(), 6);
      
      

      Serial.print(F("  Date/Time: "));
      if (gps.date.isValid())  {
        Serial.print(gps.date.month()); Serial.print(F("/"));
        Serial.print(gps.date.day()); Serial.print(F("/")); Serial.print(gps.date.year());
       
      }
      else {
        Serial.print(F("INVALID"));
      }







      Serial.print(F(" "));
      if (gps.time.isValid()) {
        if (gps.time.hour() < 10) Serial.print(F("0"));
        Serial.print(gps.time.hour()); Serial.print(F(":"));
        if (gps.time.minute() < 10) Serial.print(F("0"));
        Serial.print(gps.time.minute());
        Serial.print(F(":"));
        if (gps.time.second() < 10) Serial.print(F("0"));
        Serial.print(gps.time.second());
        Serial.print(F("."));
        if (gps.time.centisecond() < 10) Serial.print(F("0"));
        Serial.print(gps.time.centisecond());
      
        break;
      }
      else {
        Serial.print(F("INVALID"));
      }
      Serial.println();
    }
  }
 
  delay(1000);
}